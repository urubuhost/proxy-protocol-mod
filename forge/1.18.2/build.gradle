buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.0'
group = 'app.urubu.haproxy'
archivesBaseName = 'haproxy_protocol'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'haproxy_protocol'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'

    implementation 'io.netty:netty-codec-haproxy:4.1.112.Final'

    shade('io.netty:netty-codec-haproxy:4.1.112.Final') {
        exclude group: '*', module: '*'
    }

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, "haproxy_protocol.refmap.json"
    config "haproxy_protocol.mixins.json"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.findAll { file ->
            // Exclude the transitive dependencies of minecraft dependency type, which should not go into the fat jar
            // when true, jar file is unzipped and added
            !configurations.minecraft.contains(file)
        }.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes([
                "Specification-Title"     : "haproxy_protocol",
                "Specification-Vendor"    : "NickUC",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "NickUC",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    configurations = [project.configurations.shade]
    archiveFileName = 'haproxy-protocol-forge-1.18.2.jar'

    def pkg = project.group
    def libPkg = pkg + '.lib.'
    relocate 'io.netty.handler.codec.haproxy', libPkg + 'haproxy'
}

reobf {
    shadowJar {}
}

assemble.dependsOn shadowJar

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
